[build-system]
requires = ["setuptools >= 77.0.3", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jira2py"
version = "0.3.1"
description = "The Python library to interact with Atlassian Jira REST API"
readme = {file = "README.md", content-type = "text/markdown"}
authors = [
    {name = "nEver1", email = "7fhhwpuuo@mozmail.com"}
]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.11"
keywords = ["jira", "atlassian", "api", "rest", "issue-tracking"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 4 - Beta",
]
dependencies = [
    "email-validator>=2.2.0,<3.0.0",
    "pydantic>=2.11.4,<3.0.0",
    "pydantic-core>=2.33.2,<3.0.0",
    "python-dotenv>=1.1.0,<2.0.0",
    "requests>=2.32.3,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/en-ver/jira2py"
Repository = "https://github.com/en-ver/jira2py"
Documentation = "https://jira2py.org/"
Issues = "https://github.com/en-ver/jira2py/issues"

[project.optional-dependencies]
deployment = [
    "setuptools>=77.0.3",
    "wheel",
    "twine",
    "build",
]
dev = [
    "ipykernel",
    "mypy",
    "ruff>=0.12.8,<1.0.0",
    "types-requests",
    "pytest>=7.0.0,<8.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "responses>=0.22.0,<1.0.0",
]



[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Files to check
files = ["src", "tests", "scripts", "examples"]

# Configuration for test files
[[tool.mypy.overrides]]
module = "tests.*"
strict = false
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Configuration for scripts
[[tool.mypy.overrides]]
module = "scripts.*"
# Scripts can have slightly more relaxed rules
disable_error_code = ["no-untyped-def"]

# Configuration for examples
[[tool.mypy.overrides]]
module = "examples.*"
# Examples can have more relaxed rules
ignore_errors = true

[tool.ruff]
line-length = 88

# Explicitly include the directories we want to check
include = [
    "src/**/*.py",
    "tests/**/*.py",
    "scripts/**/*.py",
    "examples/**/*.py",
]

# Exclude directories that should not be checked
extend-exclude = [
    "dist",
    "build",
    "*.egg-info",
]

# Configure Ruff to handle test files appropriately
[tool.ruff.lint]
# Allow some rules to be ignored in test files
extend-ignore = [
    "S101",  # Use of assert detected
]

[tool.ruff.lint.per-file-ignores]
# Ignore specific rules in test files
"tests/**/*" = [
    "S101",  # Use of assert detected (common in tests)
    "S106",  # Possible hardcoded password (test credentials)
    "SLF001",  # Private member accessed (common in tests)
]
# Ignore specific rules in scripts
"scripts/**/*" = [
    "S106",  # Possible hardcoded password (scripts may need credentials)
]
# Ignore specific rules in examples
"examples/**/*" = [
    "S106",  # Possible hardcoded password (examples may show credentials)
]

[tool.setuptools]
packages = ["jira2py"]
package-dir = {"" = "src"}

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests",
]


